{"ast":null,"code":"var _jsxFileName = \"/home/user/Development/code/phase4/phase-4-final-project/phase-4-final-project/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  // const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  const handleUsernameChange = event => setUsername(event.target.value);\n  const handlePasswordChange = event => setPassword(event.target.value);\n  const handleLogin = async event => {\n    event.preventDefault();\n    const response = await fetch('/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      sessionStorage.setItem('userId', data.user.id);\n      setShowSuccessMessage(true);\n      setTimeout(() => {\n        window.location.href = '/addrecipe';\n      }, 2000);\n    } else {\n      setErrorMessage('Invalid username or password');\n    }\n  };\n  const handleSignup = () => {\n    navigate('/signup');\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleLogin,\n    children: [showSuccessMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Login successful! Redirecting to homepage...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 30\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formUsername\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        value: username,\n        onChange: handleUsernameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formPassword\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        value: password,\n        onChange: handlePasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"Log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"secondary\",\n      onClick: handleSignup,\n      children: \"Sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"MPjP0o9JAqK2mO4VJ0zccomubZg=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\n\n// import React, { useState } from 'react';\n// import { Card, Form, FormGroup, Label, Input, Button, Alert } from 'reactstrap';\n// import { Link} from 'react-router-dom';\n// import { storeToken } from '../utils/auth.ts';\n\n// const Login = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [showAlert, setShowAlert] = useState(false);\n//   // const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await fetch('/login', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ email, password }),\n//       });\n//       const data = await response.json();\n//       console.log(data); // handle server response here\n//       if (data) {\n//         setShowAlert(true); // show success message\n\n//         // you can store the token in local storage or cookies here\n//         window.location.href = '/addrecipe'; // redirect to home page after successful login\n\n//       }\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <div className=\"row justify-content-center\">\n//         <div className=\"col-lg-10 col-md-8\">\n//           <Card>\n//             <div className=\"card-header\">\n//               Login\n//             </div>\n//             <div className=\"card-body\">\n//               {showAlert && <Alert color=\"success\">Logged in successfully!</Alert>}\n//               <Form onSubmit={handleSubmit}>\n//                 <FormGroup>\n//                   <Label for=\"email\">Username / Email</Label>\n//                   <Input\n//                     type=\"email\"\n//                     name=\"email\"\n//                     id=\"email\"\n//                     placeholder=\"Enter your email or username\"\n//                     value={email}\n//                     onChange={(e) => setEmail(e.target.value)}\n//                   />\n//                 </FormGroup>\n//                 <FormGroup>\n//                   <Label for=\"password\">Password</Label>\n//                   <Input\n//                     type=\"password\"\n//                     name=\"password\"\n//                     id=\"password\"\n//                     placeholder=\"Enter your password\"\n//                     value={password}\n//                     onChange={(e) => setPassword(e.target.value)}\n//                   />\n//                 </FormGroup>\n//                 <Button type=\"submit\" color=\"primary\" className='btn-log'>\n//                   Login\n//                 </Button>\n//               </Form>\n//             </div>\n//             <div className=\"card-footer text-center\">\n//               <div className=\"mb-3\">Don't have an account?</div>\n//               <Link to=\"/signup\" color=\"secondary\">\n//                 Go to Register\n//               </Link>\n//             </div>\n//           </Card>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Button","Form","useNavigate","jsxDEV","_jsxDEV","Login","_s","password","setPassword","showSuccessMessage","setShowSuccessMessage","errorMessage","setErrorMessage","navigate","handleUsernameChange","event","setUsername","target","value","handlePasswordChange","handleLogin","preventDefault","response","fetch","method","headers","body","JSON","stringify","username","data","json","ok","sessionStorage","setItem","user","id","setTimeout","window","location","href","handleSignup","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Control","type","onChange","variant","onClick","_c","$RefreshReg$"],"sources":["/home/user/Development/code/phase4/phase-4-final-project/phase-4-final-project/src/components/Login.js"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nconst Login = () => {\n  // const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  const handleUsernameChange = (event) => setUsername(event.target.value);\n  const handlePasswordChange = (event) => setPassword(event.target.value);\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    const response = await fetch('/login', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ username, password }),\n    });\n    const data = await response.json();\n    if (response.ok) {\n      sessionStorage.setItem('userId', data.user.id);\n      setShowSuccessMessage(true);\n      setTimeout(() => {\n        window.location.href = '/addrecipe';\n      }, 2000);\n    } else {\n      setErrorMessage('Invalid username or password');\n    }\n  };\n  const handleSignup = () => {\n    navigate('/signup');\n  };\n  return (\n    <Form onSubmit={handleLogin}>\n      {showSuccessMessage && <p>Login successful! Redirecting to homepage...</p>}\n      {errorMessage && <p>{errorMessage}</p>}\n      <Form.Group controlId=\"formUsername\">\n        <Form.Label>Username</Form.Label>\n        <Form.Control type=\"text\" value={username} onChange={handleUsernameChange} />\n      </Form.Group>\n      <Form.Group controlId=\"formPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" value={password} onChange={handlePasswordChange} />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n        Log in\n      </Button>\n      <Button variant=\"secondary\" onClick={handleSignup}>\n        Sign up\n      </Button>\n    </Form>\n  );\n};\nexport default Login;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import { Card, Form, FormGroup, Label, Input, Button, Alert } from 'reactstrap';\n// import { Link} from 'react-router-dom';\n// import { storeToken } from '../utils/auth.ts';\n\n// const Login = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [showAlert, setShowAlert] = useState(false);\n//   // const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await fetch('/login', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ email, password }),\n//       });\n//       const data = await response.json();\n//       console.log(data); // handle server response here\n//       if (data) {\n//         setShowAlert(true); // show success message\n      \n//         // you can store the token in local storage or cookies here\n//         window.location.href = '/addrecipe'; // redirect to home page after successful login\n        \n//       }\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <div className=\"row justify-content-center\">\n//         <div className=\"col-lg-10 col-md-8\">\n//           <Card>\n//             <div className=\"card-header\">\n//               Login\n//             </div>\n//             <div className=\"card-body\">\n//               {showAlert && <Alert color=\"success\">Logged in successfully!</Alert>}\n//               <Form onSubmit={handleSubmit}>\n//                 <FormGroup>\n//                   <Label for=\"email\">Username / Email</Label>\n//                   <Input\n//                     type=\"email\"\n//                     name=\"email\"\n//                     id=\"email\"\n//                     placeholder=\"Enter your email or username\"\n//                     value={email}\n//                     onChange={(e) => setEmail(e.target.value)}\n//                   />\n//                 </FormGroup>\n//                 <FormGroup>\n//                   <Label for=\"password\">Password</Label>\n//                   <Input\n//                     type=\"password\"\n//                     name=\"password\"\n//                     id=\"password\"\n//                     placeholder=\"Enter your password\"\n//                     value={password}\n//                     onChange={(e) => setPassword(e.target.value)}\n//                   />\n//                 </FormGroup>\n//                 <Button type=\"submit\" color=\"primary\" className='btn-log'>\n//                   Login\n//                 </Button>\n//               </Form>\n//             </div>\n//             <div className=\"card-footer text-center\">\n//               <div className=\"mb-3\">Don't have an account?</div>\n//               <Link to=\"/signup\" color=\"secondary\">\n//                 Go to Register\n//               </Link>\n//             </div>\n//           </Card>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Login;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAC9C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMc,QAAQ,GAAGX,WAAW,EAAE;EAC9B,MAAMY,oBAAoB,GAAIC,KAAK,IAAKC,WAAW,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;EACvE,MAAMC,oBAAoB,GAAIJ,KAAK,IAAKP,WAAW,CAACO,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;EACvE,MAAME,WAAW,GAAG,MAAOL,KAAK,IAAK;IACnCA,KAAK,CAACM,cAAc,EAAE;IACtB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,QAAQ,EAAE;MACrCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,QAAQ;QAAEtB;MAAS,CAAC;IAC7C,CAAC,CAAC;IACF,MAAMuB,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,EAAE;IAClC,IAAIT,QAAQ,CAACU,EAAE,EAAE;MACfC,cAAc,CAACC,OAAO,CAAC,QAAQ,EAAEJ,IAAI,CAACK,IAAI,CAACC,EAAE,CAAC;MAC9C1B,qBAAqB,CAAC,IAAI,CAAC;MAC3B2B,UAAU,CAAC,MAAM;QACfC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,YAAY;MACrC,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM;MACL5B,eAAe,CAAC,8BAA8B,CAAC;IACjD;EACF,CAAC;EACD,MAAM6B,YAAY,GAAGA,CAAA,KAAM;IACzB5B,QAAQ,CAAC,SAAS,CAAC;EACrB,CAAC;EACD,oBACET,OAAA,CAACH,IAAI;IAACyC,QAAQ,EAAEtB,WAAY;IAAAuB,QAAA,GACzBlC,kBAAkB,iBAAIL,OAAA;MAAAuC,QAAA,EAAG;IAA4C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,EACzEpC,YAAY,iBAAIP,OAAA;MAAAuC,QAAA,EAAIhC;IAAY;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACtC3C,OAAA,CAACH,IAAI,CAAC+C,KAAK;MAACC,SAAS,EAAC,cAAc;MAAAN,QAAA,gBAClCvC,OAAA,CAACH,IAAI,CAACiD,KAAK;QAAAP,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eACjC3C,OAAA,CAACH,IAAI,CAACkD,OAAO;QAACC,IAAI,EAAC,MAAM;QAAClC,KAAK,EAAEW,QAAS;QAACwB,QAAQ,EAAEvC;MAAqB;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClE,eACb3C,OAAA,CAACH,IAAI,CAAC+C,KAAK;MAACC,SAAS,EAAC,cAAc;MAAAN,QAAA,gBAClCvC,OAAA,CAACH,IAAI,CAACiD,KAAK;QAAAP,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eACjC3C,OAAA,CAACH,IAAI,CAACkD,OAAO;QAACC,IAAI,EAAC,UAAU;QAAClC,KAAK,EAAEX,QAAS;QAAC8C,QAAQ,EAAElC;MAAqB;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtE,eACb3C,OAAA,CAACJ,MAAM;MAACsD,OAAO,EAAC,SAAS;MAACF,IAAI,EAAC,QAAQ;MAAAT,QAAA,EAAC;IAExC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACT3C,OAAA,CAACJ,MAAM;MAACsD,OAAO,EAAC,WAAW;MAACC,OAAO,EAAEd,YAAa;MAAAE,QAAA,EAAC;IAEnD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEX,CAAC;AAACzC,EAAA,CAjDID,KAAK;EAAA,QAKQH,WAAW;AAAA;AAAAsD,EAAA,GALxBnD,KAAK;AAkDX,eAAeA,KAAK;;AAgBpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}