{"ast":null,"code":"var _jsxFileName = \"/home/user/Development/code/phase4/phase-4-final-project/phase-4-final-project/src/components/Login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { Button, Form } from 'react-bootstrap';\n// import { useNavigate } from 'react-router-dom';\n// const Login = () => {\n//   // const [username, setUsername] = useState('');\n//    const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n//   const [errorMessage, setErrorMessage] = useState('');\n//   const navigate = useNavigate();\n//   const handleEmailChange = (event) => setEmail(event.target.value);\n//   const handlePasswordChange = (event) => setPassword(event.target.value);\n//   const handleLogin = async (event) => {\n//     event.preventDefault();\n//     const response = await fetch('/login', {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ email, password }),\n//     });\n//     const data = await response.json();\n//     if (response.ok) {\n//       sessionStorage.setItem('userId', data.user.id);\n//       setShowSuccessMessage(true);\n//       setTimeout(() => {\n//         window.location.href = '/addrecipe';\n//       }, 2000);\n//     } else {\n//       setErrorMessage('Invalid username or password');\n//     }\n//   };\n//   const handleSignup = () => {\n//     navigate('/signup');\n//   };\n//   return (\n//     <Form onSubmit={handleLogin}>\n//       {showSuccessMessage && <p>Login successful! Redirecting to homepage...</p>}\n//       {errorMessage && <p>{errorMessage}</p>}\n//       <Form.Group controlId=\"formUsername\">\n//         <Form.Label>Username</Form.Label>\n//         <Form.Control type=\"text\" value={email} onChange={handleEmailChange} />\n//       </Form.Group>\n//       <Form.Group controlId=\"formPassword\">\n//         <Form.Label>Password</Form.Label>\n//         <Form.Control type=\"password\" value={password} onChange={handlePasswordChange} />\n//       </Form.Group>\n//       <Button variant=\"primary\" type=\"submit\">\n//         Log in\n//       </Button>\n//       <Button variant=\"secondary\" onClick={handleSignup}>\n//         Sign up\n//       </Button>\n//     </Form>\n//   );\n// };\n// export default Login;\n\nimport React, { useState } from 'react';\nimport { Card, Form, FormGroup, Label, Input, Button, Alert } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { storeToken } from '../utils/auth.ts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login(props) {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showAlert, setShowAlert] = useState(false);\n  // const navigate = useNavigate();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Send a POST request to login and create a session\n    fetch('/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Login failed');\n      }\n    }).then(data => {\n      sessionStorage.setItem('userId');\n      // Call the onLogin callback with the user ID\n      onLogin(data.user_id);\n    }).catch(error => {\n      setShowAlert('Invalid email or password');\n      window.location.href = '/addrecipe';\n    });\n  };\n  //   try {\n  //     const response = await fetch('/login', {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify({ email, password }),\n  //     });\n  //     const data = await response.json();\n  //     console.log(data); // handle server response here\n  //     if (data) {\n  //       setShowAlert(true); // show success message\n  //       onLogin(data.user_id);\n  //       // you can store the token in local storage or cookies here\n  //       window.location.href = '/addrecipe'; // redirect to home page after successful login\n\n  //     }\n  //   } catch (error) {\n  //     console.error(error);\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-10 col-md-8\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n              color: \"success\",\n              children: \"Logged in successfully!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  for: \"email\",\n                  children: \"Username / Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"email\",\n                  name: \"email\",\n                  id: \"email\",\n                  placeholder: \"Enter your email or username\",\n                  value: email,\n                  onChange: e => setEmail(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: [/*#__PURE__*/_jsxDEV(Label, {\n                  for: \"password\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  type: \"password\",\n                  name: \"password\",\n                  id: \"password\",\n                  placeholder: \"Enter your password\",\n                  value: password,\n                  onChange: e => setPassword(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                color: \"primary\",\n                className: \"btn-log\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-footer text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3\",\n              children: \"Don't have an account?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/signup\",\n              color: \"secondary\",\n              children: \"Go to Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"O9FkIOLJ430c27lCuGw8u0NizkI=\");\n_c = Login;\n;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Card","Form","FormGroup","Label","Input","Button","Alert","Link","storeToken","jsxDEV","_jsxDEV","Login","props","_s","email","setEmail","password","setPassword","showAlert","setShowAlert","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","ok","json","Error","data","sessionStorage","setItem","onLogin","user_id","catch","error","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","color","onSubmit","for","type","name","id","placeholder","value","onChange","target","to","_c","$RefreshReg$"],"sources":["/home/user/Development/code/phase4/phase-4-final-project/phase-4-final-project/src/components/Login.js"],"sourcesContent":["\n// import React, { useState } from 'react';\n// import { Button, Form } from 'react-bootstrap';\n// import { useNavigate } from 'react-router-dom';\n// const Login = () => {\n//   // const [username, setUsername] = useState('');\n//    const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n//   const [errorMessage, setErrorMessage] = useState('');\n//   const navigate = useNavigate();\n//   const handleEmailChange = (event) => setEmail(event.target.value);\n//   const handlePasswordChange = (event) => setPassword(event.target.value);\n//   const handleLogin = async (event) => {\n//     event.preventDefault();\n//     const response = await fetch('/login', {\n//       method: 'POST',\n//       headers: { 'Content-Type': 'application/json' },\n//       body: JSON.stringify({ email, password }),\n//     });\n//     const data = await response.json();\n//     if (response.ok) {\n//       sessionStorage.setItem('userId', data.user.id);\n//       setShowSuccessMessage(true);\n//       setTimeout(() => {\n//         window.location.href = '/addrecipe';\n//       }, 2000);\n//     } else {\n//       setErrorMessage('Invalid username or password');\n//     }\n//   };\n//   const handleSignup = () => {\n//     navigate('/signup');\n//   };\n//   return (\n//     <Form onSubmit={handleLogin}>\n//       {showSuccessMessage && <p>Login successful! Redirecting to homepage...</p>}\n//       {errorMessage && <p>{errorMessage}</p>}\n//       <Form.Group controlId=\"formUsername\">\n//         <Form.Label>Username</Form.Label>\n//         <Form.Control type=\"text\" value={email} onChange={handleEmailChange} />\n//       </Form.Group>\n//       <Form.Group controlId=\"formPassword\">\n//         <Form.Label>Password</Form.Label>\n//         <Form.Control type=\"password\" value={password} onChange={handlePasswordChange} />\n//       </Form.Group>\n//       <Button variant=\"primary\" type=\"submit\">\n//         Log in\n//       </Button>\n//       <Button variant=\"secondary\" onClick={handleSignup}>\n//         Sign up\n//       </Button>\n//     </Form>\n//   );\n// };\n// export default Login;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { useState } from 'react';\nimport { Card, Form, FormGroup, Label, Input, Button, Alert } from 'reactstrap';\nimport { Link} from 'react-router-dom';\nimport { storeToken } from '../utils/auth.ts';\n\nfunction Login (props ) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showAlert, setShowAlert] = useState(false);\n  // const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n       // Send a POST request to login and create a session\n       fetch('/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      })\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error('Login failed');\n        }\n      })\n      .then(data => {\n        sessionStorage.setItem('userId');\n        // Call the onLogin callback with the user ID\n        onLogin(data.user_id);\n      })\n      .catch(error => {\n        setShowAlert('Invalid email or password');\n        window.location.href = '/addrecipe';\n      });\n    };\n  //   try {\n  //     const response = await fetch('/login', {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify({ email, password }),\n  //     });\n  //     const data = await response.json();\n  //     console.log(data); // handle server response here\n  //     if (data) {\n  //       setShowAlert(true); // show success message\n  //       onLogin(data.user_id);\n  //       // you can store the token in local storage or cookies here\n  //       window.location.href = '/addrecipe'; // redirect to home page after successful login\n        \n  //     }\n  //   } catch (error) {\n  //     console.error(error);\n  //   }\n  // };\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"row justify-content-center\">\n        <div className=\"col-lg-10 col-md-8\">\n          <Card>\n            <div className=\"card-header\">\n              Login\n            </div>\n            <div className=\"card-body\">\n              {showAlert && <Alert color=\"success\">Logged in successfully!</Alert>}\n              <Form onSubmit={handleSubmit}>\n                <FormGroup>\n                  <Label for=\"email\">Username / Email</Label>\n                  <Input\n                    type=\"email\"\n                    name=\"email\"\n                    id=\"email\"\n                    placeholder=\"Enter your email or username\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <Label for=\"password\">Password</Label>\n                  <Input\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"password\"\n                    placeholder=\"Enter your password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                </FormGroup>\n                <Button type=\"submit\" color=\"primary\" className='btn-log'>\n                  Login\n                </Button>\n              </Form>\n            </div>\n            <div className=\"card-footer text-center\">\n              <div className=\"mb-3\">Don't have an account?</div>\n              <Link to=\"/signup\" color=\"secondary\">\n                Go to Register\n              </Link>\n            </div>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}